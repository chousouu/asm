IN ;a
IN ;b
IN ;c
pop rcx
pop rbx 
pop rax 

CALL DISC: 

push 0
push rdx

JE DISC_ZERO:

push 0
push rdx

JA DISC_POSITIVE:

push 0
push rdx

JB DISC_NEG: 

HALT


DISC:
push rbx
push rbx
mul 
push 4
push rax
push rcx
mul
mul 
sub 
pop rdx
RET 


DISC_POSITIVE:; disc > 0
push -1
push rbx
mul
push rdx
SQRT
add
push 2
push rax 
mul
div 
PRROOT

push -1
push rbx
mul
push rdx
SQRT
sub
push 2
push rax 
mul
div 
PRROOT
HALT

DISC_NEG:; discrim < 0
HALT
HALT

DISC_ZERO:
push -1
push rbx
mul 
push 2
push rax
mul
div
PRROOT
HALT

